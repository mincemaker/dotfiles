alias pylibdir='python -c "from distutils.sysconfig import get_python_lib; print get_python_lib()"'
export LSCOLORS=gxfxcxdxbxegedabagacad
alias cpan-uninstall='sudo perl -MConfig -MExtUtils::Install -e '"'"'($FULLEXT=shift)=~s{-}{/}g;uninstall "$Config{sitearchexp}/auto/$FULLEXT/.packlist",1'"'"
alias emacs='/usr/local/bin/emacs -nw'
alias -g CA='| canything'
alias pip-upgrade-all='pip freeze | grep -v "\-e" | cut -d= -f1 | xargs pip install -U'

# canything
if [ -d ~/bin ]; then
  export PATH=$HOME/bin:$PATH
fi

# perlbrew
if [ -d ~/perl5 ]; then
  source $HOME/perl5/perlbrew/etc/bashrc
fi

# pythonz
if [ -d ~/.pythonz ]; then
  source $HOME/.pythonz/etc/bashrc
fi

# virtualenv
which virtualenvwrapper.sh > /dev/null
if [ $? -eq 0 ]; then
    source `which virtualenvwrapper.sh`
    mkdir -p ~/.virtualenvs
    export WORKON_HOME=~/.virtualenvs
    export PIP_RESPECT_VIRTUALENV=true
fi

# nodebrew
if [ -d ~/.nodebrew ]; then
  export PATH=$HOME/.nodebrew/current/bin:$PATH
fi

# gvm
[[ -s $HOME/.gvm/bin/gvm-init.sh ]] && source $HOME/.gvm/bin/gvm-init.sh

# rbenv
if [ -d ~/.rbenv ]; then
  export PATH="$HOME/.rbenv/bin:$PATH"
  export PATH="$HOME/.rbenv/shims:${PATH}"
  source /usr/local/Cellar/rbenv/0.4.0/completions/rbenv.zsh
  rbenv() {
    typeset command
    command="$1"
    if [ "$#" -gt 0 ]; then
      shift
    fi

    case "$command" in
      rehash|shell)
        eval `rbenv "sh-$command" "$@"`;;
      *)
        command rbenv "$command" "$@";;
    esac
  }
fi

# macvim-kaoriya
if [ -d /Applications/MacVim.app ]; then
  alias vim='env LANG=ja_JP.UTF-8 /Applications/MacVim.app/Contents/MacOS/Vim "$@"'
  alias gvim='env LANG=ja_JP.UTF-8 /Applications/MacVim.app/Contents/MacOS/Vim -g "$@"'
  export EDITOR='env LANG=ja_JP.UTF-8 /Applications/MacVim.app/Contents/MacOS/Vim "$@"'
fi

# bundler
[ -f ~/.bundler-exec.sh ] && source ~/.bundler-exec.sh

# homebrew
if [ -f /usr/local/bin/brew ]; then
  export PATH=/usr/local/sbin:$PATH
  export HOMEBREW_BREWFILE=~/.brewfile
fi

# ack
if [ -f /usr/local/bin/ack ]; then
  alias ack-grep="/usr/local/bin/ack"
fi

# git
if [ -f /usr/local/bin/brew ]; then
  fpath=($(brew --prefix)/share/zsh/site-functions $fpath)
else
  fpath=(~/.zsh/completion $fpath)
fi
autoload -U compinit
compinit -u

# peco
if [ -f /usr/bin/peco ]; then
  function peco-select-history() {
      local tac
      if which tac > /dev/null; then
          tac="tac"
      else
          tac="tail -r"
      fi
      BUFFER=$(history -n 1 | eval $tac | peco --query "$LBUFFER")
      CURSOR=$#BUFFER
      # zle clear-screen
  }
  zle -N peco-select-history
  bindkey '^r' peco-select-history
fi
